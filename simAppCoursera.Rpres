simAppCoursera's Anatomy
========================================================
author: Qian Fu
date: `r format(Sys.Date(), format = "%d %B %Y")`
font-family: Cambria
transition: rotate

Developing Data Products - Assignment (part 2)

<small>
- Shinyapps.io: https://mikeqfu.shinyapps.io/simAppCoursera
- Github: https://github.com/mikeqfu/simAppCoursera.git
</small>

Introduction
========================================================
This presentation is intended to briefly 'decode' how the simple Shiny application, [simAppCoursera](https://mikeqfu.shinyapps.io/simAppCoursera), works. The app was:

- created for the first part of the course project of a Coursera course, [Developing Data Products](https://www.coursera.org/learn/data-products);  
- deployed deployed on the RStudio's server (i.e. shinyapps.io); 
- illustrating the basic properties of the distribution of the mean of [exponentials](https://en.wikipedia.org/wiki/Exponential_distribution) via simulation; *and* 
- comparing the exponential distribution with the [Central Limit Theorem](https://en.wikipedia.org/wiki/Central_limit_theorem)

<small>
For more information, see the "simulation exercise" of another Coursera course - [Statistical Inference](https://www.coursera.org/learn/statistical-inference). 
</small>


Simulation
========================================================
<small>
Given default values specified in the app, the simulation is performanced as follows:
</small>

```{r}
# rate parameter of exponential distribution
lambda <- 0.2
# number of simulations
noSim <- 1000
# sample size for each simulation
n <- 40
# seed number
set.seed(1)   

# means of the simulated samples
mes <- NULL
for (i in 1:noSim) {
    mes <- c(mes, mean(rexp(n, lambda)))
}
```




Distributions
========================================================

```{r, echo=FALSE, fig.width=14, fig.height=7}
cellNumber <- 25 # Number of cells for the empirical distribution
# Draw an empirical distribution based on the simulated data
opar=par(cex.lab=1.5, cex.axis=1.5, cex.main=2, cex.sub=1.5)
hist(x = mes, 
     breaks = cellNumber, 
     probability = TRUE, 
     main = paste0("Probability density of ", n, 
                   " exponentials (lambda = ", lambda, ")"),
     xlab = paste("Mean of", n, "exponentials"), 
     ylab = "Probability density", 
     col = rgb(0.1, 0.1, 0.1, alpha = 0.05))
# Draw a line for the theoretical mean, given the lambda
theoretical_mean <- 1 / lambda
abline(v = theoretical_mean, col = "blue", lty = 1, lwd = 4)
# Draw a line for the sample mean
abline(v = mean(mes), col = "red", lty = 3, lwd = 2)
# Given the theorectical mean in this case, 
# draw the theoretical probability density of normal distribution
x_axis <- seq(min(mes), max(mes), length = 88)
vmes <- round(var(mes), 3)
y_axis <- dnorm(x_axis, mean = theoretical_mean, sd = sqrt(vmes))
lines(x_axis, y_axis, col = "magenta", lty = 2, lwd = 2)

# Draw the probability density of the simulated sample means
lines(density(mes), col = "cyan", lwd = 2)

# Add legend
legend(x = 'topright', 
       c("Empirical distribution of the simulated sample means", 
         "Theoretical mean, given lambda", 
         "Sample mean based on simulation",
         paste("Probability density of", "the theoretical normal distribution"),
         paste("Probability density distribution of", "the simulated sample means")), 
       col = c(rgb(0.1, 0.1, 0.1, alpha = 0.05), "blue", "red", "magenta", "cyan"), 
       lty = c(1, 1, 3, 2, 1), lwd = c(12, 4, 2, 2, 1))
```

<small><small>
Some parameters, including the **exponential rate** (`lambda`), **nmber of simulations** (`noSim`), **sample size for each simulation** (`n`), as well as the **number of cells** (`cellNumber`) for the empirical distribution, could be manually changed on the app page.
</small></small>



Brief summary
========================================================
- The app illustrates
    - the density of **simulated** sample means of the specified exponential distribution, given a rate parameter (being `r lambda` in the example); and 
    - the **theoretical** probability density of a normal distribution with the corresponding mean and standard deviation (being `r theoretical_mean` and `r round(sqrt(vmes), 2)`, respectively, in the example).

- The comparison between the simulated distribution and the corresponding theoretical normal distribution demonstrates the *central limit theorem*.

